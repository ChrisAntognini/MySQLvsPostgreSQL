--
-- This script is used to test the subpartitioning capabilities
--

-- list-list partitioning

DROP TABLE IF EXISTS t;

CREATE TABLE t (id INTEGER, i1 INTEGER, i2 INTEGER, i3 INTEGER) PARTITION BY LIST (i1);

CREATE TABLE t_1 PARTITION OF t FOR VALUES IN (1) PARTITION BY LIST (i2);
CREATE TABLE t_2 PARTITION OF t FOR VALUES IN (2) PARTITION BY LIST (i2);
CREATE TABLE t_3 PARTITION OF t FOR VALUES IN (3) PARTITION BY LIST (i2);

CREATE TABLE t_1_10 PARTITION OF t_1 FOR VALUES IN (10);
CREATE TABLE t_1_20 PARTITION OF t_1 FOR VALUES IN (20);
CREATE TABLE t_1_30 PARTITION OF t_1 FOR VALUES IN (30);
CREATE TABLE t_2_10 PARTITION OF t_2 FOR VALUES IN (10);
CREATE TABLE t_2_20 PARTITION OF t_2 FOR VALUES IN (20);
CREATE TABLE t_2_30 PARTITION OF t_2 FOR VALUES IN (30);
CREATE TABLE t_3_10 PARTITION OF t_3 FOR VALUES IN (10);
CREATE TABLE t_3_20 PARTITION OF t_3 FOR VALUES IN (20);
CREATE TABLE t_3_30 PARTITION OF t_3 FOR VALUES IN (30);

EXPLAIN SELECT * FROM t WHERE i1 = 1;
EXPLAIN SELECT * FROM t WHERE i1 = 1 AND i2 = 20;
EXPLAIN SELECT * FROM t WHERE i2 = 20;

-- list-range partitioning

DROP TABLE t;

CREATE TABLE t (id INTEGER, i1 INTEGER, i2 INTEGER, i3 INTEGER) PARTITION BY LIST (i1);

CREATE TABLE t_1 PARTITION OF t FOR VALUES IN (1) PARTITION BY RANGE (i2);
CREATE TABLE t_2 PARTITION OF t FOR VALUES IN (2) PARTITION BY RANGE (i2);
CREATE TABLE t_3 PARTITION OF t FOR VALUES IN (3) PARTITION BY RANGE (i2);

CREATE TABLE t_1_10 PARTITION OF t_1 FOR VALUES FROM (1) TO (10);
CREATE TABLE t_1_20 PARTITION OF t_1 FOR VALUES FROM (10) TO (20);
CREATE TABLE t_1_30 PARTITION OF t_1 FOR VALUES FROM (20) TO (30);
CREATE TABLE t_2_10 PARTITION OF t_2 FOR VALUES FROM (1) TO (10);
CREATE TABLE t_2_20 PARTITION OF t_2 FOR VALUES FROM (10) TO (20);
CREATE TABLE t_2_30 PARTITION OF t_2 FOR VALUES FROM (20) TO (30);
CREATE TABLE t_3_10 PARTITION OF t_3 FOR VALUES FROM (1) TO (10);
CREATE TABLE t_3_20 PARTITION OF t_3 FOR VALUES FROM (10) TO (20);
CREATE TABLE t_3_30 PARTITION OF t_3 FOR VALUES FROM (20) TO (30);

EXPLAIN SELECT * FROM t WHERE i1 = 1;
EXPLAIN SELECT * FROM t WHERE i1 = 1 AND i2 = 20;
EXPLAIN SELECT * FROM t WHERE i2 = 20;

-- list-hash partitioning

DROP TABLE t;

CREATE TABLE t (id INTEGER, i1 INTEGER, i2 INTEGER, i3 INTEGER) PARTITION BY LIST (i1);

CREATE TABLE t_1 PARTITION OF t FOR VALUES IN (1) PARTITION BY HASH (i2);
CREATE TABLE t_2 PARTITION OF t FOR VALUES IN (2) PARTITION BY HASH (i2);
CREATE TABLE t_3 PARTITION OF t FOR VALUES IN (3) PARTITION BY HASH (i2);

CREATE TABLE t_1_0 PARTITION OF t_1 FOR VALUES WITH (MODULUS 4, REMAINDER 0);
CREATE TABLE t_1_1 PARTITION OF t_1 FOR VALUES WITH (MODULUS 4, REMAINDER 1);
CREATE TABLE t_1_2 PARTITION OF t_1 FOR VALUES WITH (MODULUS 4, REMAINDER 2);
CREATE TABLE t_1_3 PARTITION OF t_1 FOR VALUES WITH (MODULUS 4, REMAINDER 3);
CREATE TABLE t_2_0 PARTITION OF t_2 FOR VALUES WITH (MODULUS 4, REMAINDER 0);
CREATE TABLE t_2_1 PARTITION OF t_2 FOR VALUES WITH (MODULUS 4, REMAINDER 1);
CREATE TABLE t_2_2 PARTITION OF t_2 FOR VALUES WITH (MODULUS 4, REMAINDER 2);
CREATE TABLE t_2_3 PARTITION OF t_2 FOR VALUES WITH (MODULUS 4, REMAINDER 3);
CREATE TABLE t_3_0 PARTITION OF t_3 FOR VALUES WITH (MODULUS 4, REMAINDER 0);
CREATE TABLE t_3_1 PARTITION OF t_3 FOR VALUES WITH (MODULUS 4, REMAINDER 1);
CREATE TABLE t_3_2 PARTITION OF t_3 FOR VALUES WITH (MODULUS 4, REMAINDER 2);
CREATE TABLE t_3_3 PARTITION OF t_3 FOR VALUES WITH (MODULUS 4, REMAINDER 3);

EXPLAIN SELECT * FROM t WHERE i1 = 1;
EXPLAIN SELECT * FROM t WHERE i1 = 1 AND i2 = 20;
EXPLAIN SELECT * FROM t WHERE i2 = 20;

-- range-list partitioning

DROP TABLE t;

CREATE TABLE t (id INTEGER, i1 INTEGER, i2 INTEGER, i3 INTEGER) PARTITION BY RANGE (i1);

CREATE TABLE t_10 PARTITION OF t FOR VALUES FROM (1) TO (10) PARTITION BY LIST (i2);
CREATE TABLE t_20 PARTITION OF t FOR VALUES FROM (10) TO (20) PARTITION BY LIST (i2);
CREATE TABLE t_30 PARTITION OF t FOR VALUES FROM (20) TO (30) PARTITION BY LIST (i2);

CREATE TABLE t_10_1 PARTITION OF t_10 FOR VALUES IN (1);
CREATE TABLE t_10_2 PARTITION OF t_10 FOR VALUES IN (2);
CREATE TABLE t_10_3 PARTITION OF t_10 FOR VALUES IN (3);
CREATE TABLE t_20_1 PARTITION OF t_20 FOR VALUES IN (1);
CREATE TABLE t_20_2 PARTITION OF t_20 FOR VALUES IN (2);
CREATE TABLE t_20_3 PARTITION OF t_20 FOR VALUES IN (3);
CREATE TABLE t_30_1 PARTITION OF t_30 FOR VALUES IN (1);
CREATE TABLE t_30_2 PARTITION OF t_30 FOR VALUES IN (2);
CREATE TABLE t_30_3 PARTITION OF t_30 FOR VALUES IN (3);

EXPLAIN SELECT * FROM t WHERE i1 = 10;
EXPLAIN SELECT * FROM t WHERE i1 = 10 AND i2 = 2;
EXPLAIN SELECT * FROM t WHERE i2 = 2;

-- range-range partitioning

DROP TABLE t;

CREATE TABLE t (id INTEGER, i1 INTEGER, i2 INTEGER, i3 INTEGER) PARTITION BY RANGE (i1);

CREATE TABLE t_10 PARTITION OF t FOR VALUES FROM (1) TO (10) PARTITION BY RANGE (i2);
CREATE TABLE t_20 PARTITION OF t FOR VALUES FROM (10) TO (20) PARTITION BY RANGE (i2);
CREATE TABLE t_30 PARTITION OF t FOR VALUES FROM (20) TO (30) PARTITION BY RANGE (i2);

CREATE TABLE t_10_10 PARTITION OF t_10 FOR VALUES FROM (1) TO (10);
CREATE TABLE t_10_20 PARTITION OF t_10 FOR VALUES FROM (10) TO (20);
CREATE TABLE t_10_30 PARTITION OF t_10 FOR VALUES FROM (20) TO (30);
CREATE TABLE t_20_10 PARTITION OF t_20 FOR VALUES FROM (1) TO (10);
CREATE TABLE t_20_20 PARTITION OF t_20 FOR VALUES FROM (10) TO (20);
CREATE TABLE t_20_30 PARTITION OF t_20 FOR VALUES FROM (20) TO (30);
CREATE TABLE t_30_10 PARTITION OF t_30 FOR VALUES FROM (1) TO (10);
CREATE TABLE t_30_20 PARTITION OF t_30 FOR VALUES FROM (10) TO (20);
CREATE TABLE t_30_30 PARTITION OF t_30 FOR VALUES FROM (20) TO (30);

EXPLAIN SELECT * FROM t WHERE i1 = 1;
EXPLAIN SELECT * FROM t WHERE i1 = 1 AND i2 = 20;
EXPLAIN SELECT * FROM t WHERE i2 = 20;

-- range-hash partitioning

DROP TABLE t;

CREATE TABLE t (id INTEGER, i1 INTEGER, i2 INTEGER, i3 INTEGER) PARTITION BY RANGE (i1);

CREATE TABLE t_10 PARTITION OF t FOR VALUES FROM (1) TO (10) PARTITION BY HASH (i2);
CREATE TABLE t_20 PARTITION OF t FOR VALUES FROM (10) TO (20) PARTITION BY HASH (i2);
CREATE TABLE t_30 PARTITION OF t FOR VALUES FROM (20) TO (30) PARTITION BY HASH (i2);

CREATE TABLE t_10_0 PARTITION OF t_10 FOR VALUES WITH (MODULUS 4, REMAINDER 0);
CREATE TABLE t_10_1 PARTITION OF t_10 FOR VALUES WITH (MODULUS 4, REMAINDER 1);
CREATE TABLE t_10_2 PARTITION OF t_10 FOR VALUES WITH (MODULUS 4, REMAINDER 2);
CREATE TABLE t_10_3 PARTITION OF t_10 FOR VALUES WITH (MODULUS 4, REMAINDER 3);
CREATE TABLE t_20_0 PARTITION OF t_20 FOR VALUES WITH (MODULUS 4, REMAINDER 0);
CREATE TABLE t_20_1 PARTITION OF t_20 FOR VALUES WITH (MODULUS 4, REMAINDER 1);
CREATE TABLE t_20_2 PARTITION OF t_20 FOR VALUES WITH (MODULUS 4, REMAINDER 2);
CREATE TABLE t_20_3 PARTITION OF t_20 FOR VALUES WITH (MODULUS 4, REMAINDER 3);
CREATE TABLE t_30_0 PARTITION OF t_30 FOR VALUES WITH (MODULUS 4, REMAINDER 0);
CREATE TABLE t_30_1 PARTITION OF t_30 FOR VALUES WITH (MODULUS 4, REMAINDER 1);
CREATE TABLE t_30_2 PARTITION OF t_30 FOR VALUES WITH (MODULUS 4, REMAINDER 2);
CREATE TABLE t_30_3 PARTITION OF t_30 FOR VALUES WITH (MODULUS 4, REMAINDER 3);

EXPLAIN SELECT * FROM t WHERE i1 = 1;
EXPLAIN SELECT * FROM t WHERE i1 = 1 AND i2 = 20;
EXPLAIN SELECT * FROM t WHERE i2 = 20;

-- hash-list partitioning

DROP TABLE t;

CREATE TABLE t (id INTEGER, i1 INTEGER, i2 INTEGER, i3 INTEGER) PARTITION BY HASH (i1);

CREATE TABLE t_0 PARTITION OF t FOR VALUES WITH (MODULUS 4, REMAINDER 0) PARTITION BY LIST (i2);
CREATE TABLE t_1 PARTITION OF t FOR VALUES WITH (MODULUS 4, REMAINDER 1) PARTITION BY LIST (i2);
CREATE TABLE t_2 PARTITION OF t FOR VALUES WITH (MODULUS 4, REMAINDER 2) PARTITION BY LIST (i2);
CREATE TABLE t_3 PARTITION OF t FOR VALUES WITH (MODULUS 4, REMAINDER 3) PARTITION BY LIST (i2);

CREATE TABLE t_0_10 PARTITION OF t_0 FOR VALUES IN (10);
CREATE TABLE t_0_20 PARTITION OF t_0 FOR VALUES IN (20);
CREATE TABLE t_0_30 PARTITION OF t_0 FOR VALUES IN (30);
CREATE TABLE t_1_10 PARTITION OF t_1 FOR VALUES IN (10);
CREATE TABLE t_1_20 PARTITION OF t_1 FOR VALUES IN (20);
CREATE TABLE t_1_30 PARTITION OF t_1 FOR VALUES IN (30);
CREATE TABLE t_2_10 PARTITION OF t_2 FOR VALUES IN (10);
CREATE TABLE t_2_20 PARTITION OF t_2 FOR VALUES IN (20);
CREATE TABLE t_2_30 PARTITION OF t_2 FOR VALUES IN (30);
CREATE TABLE t_3_10 PARTITION OF t_3 FOR VALUES IN (10);
CREATE TABLE t_3_20 PARTITION OF t_3 FOR VALUES IN (20);
CREATE TABLE t_3_30 PARTITION OF t_3 FOR VALUES IN (30);

EXPLAIN SELECT * FROM t WHERE i1 = 1;
EXPLAIN SELECT * FROM t WHERE i1 = 1 AND i2 = 20;
EXPLAIN SELECT * FROM t WHERE i2 = 20;

-- hash-range partitioning

DROP TABLE t;

CREATE TABLE t (id INTEGER, i1 INTEGER, i2 INTEGER, i3 INTEGER) PARTITION BY HASH (i1);

CREATE TABLE t_0 PARTITION OF t FOR VALUES WITH (MODULUS 4, REMAINDER 0) PARTITION BY RANGE (i2);
CREATE TABLE t_1 PARTITION OF t FOR VALUES WITH (MODULUS 4, REMAINDER 1) PARTITION BY RANGE (i2);
CREATE TABLE t_2 PARTITION OF t FOR VALUES WITH (MODULUS 4, REMAINDER 2) PARTITION BY RANGE (i2);
CREATE TABLE t_3 PARTITION OF t FOR VALUES WITH (MODULUS 4, REMAINDER 3) PARTITION BY RANGE (i2);

CREATE TABLE t_0_10 PARTITION OF t_0 FOR VALUES FROM (1) TO (10);
CREATE TABLE t_0_20 PARTITION OF t_0 FOR VALUES FROM (10) TO (20);
CREATE TABLE t_0_30 PARTITION OF t_0 FOR VALUES FROM (20) TO (30);
CREATE TABLE t_1_10 PARTITION OF t_1 FOR VALUES FROM (1) TO (10);
CREATE TABLE t_1_20 PARTITION OF t_1 FOR VALUES FROM (10) TO (20);
CREATE TABLE t_1_30 PARTITION OF t_1 FOR VALUES FROM (20) TO (30);
CREATE TABLE t_2_10 PARTITION OF t_2 FOR VALUES FROM (1) TO (10);
CREATE TABLE t_2_20 PARTITION OF t_2 FOR VALUES FROM (10) TO (20);
CREATE TABLE t_2_30 PARTITION OF t_2 FOR VALUES FROM (20) TO (30);
CREATE TABLE t_3_10 PARTITION OF t_3 FOR VALUES FROM (1) TO (10);
CREATE TABLE t_3_20 PARTITION OF t_3 FOR VALUES FROM (10) TO (20);
CREATE TABLE t_3_30 PARTITION OF t_3 FOR VALUES FROM (20) TO (30);

EXPLAIN SELECT * FROM t WHERE i1 = 1;
EXPLAIN SELECT * FROM t WHERE i1 = 1 AND i2 = 20;
EXPLAIN SELECT * FROM t WHERE i2 = 20;

-- hash-hash partitioning

DROP TABLE t;

CREATE TABLE t (id INTEGER, i1 INTEGER, i2 INTEGER, i3 INTEGER) PARTITION BY HASH (i1);

CREATE TABLE t_0 PARTITION OF t FOR VALUES WITH (MODULUS 4, REMAINDER 0) PARTITION BY HASH (i2);
CREATE TABLE t_1 PARTITION OF t FOR VALUES WITH (MODULUS 4, REMAINDER 1) PARTITION BY HASH (i2);
CREATE TABLE t_2 PARTITION OF t FOR VALUES WITH (MODULUS 4, REMAINDER 2) PARTITION BY HASH (i2);
CREATE TABLE t_3 PARTITION OF t FOR VALUES WITH (MODULUS 4, REMAINDER 3) PARTITION BY HASH (i2);

CREATE TABLE t_0_0 PARTITION OF t_0 FOR VALUES WITH (MODULUS 4, REMAINDER 0);
CREATE TABLE t_0_1 PARTITION OF t_0 FOR VALUES WITH (MODULUS 4, REMAINDER 1);
CREATE TABLE t_0_2 PARTITION OF t_0 FOR VALUES WITH (MODULUS 4, REMAINDER 2);
CREATE TABLE t_0_3 PARTITION OF t_0 FOR VALUES WITH (MODULUS 4, REMAINDER 3);
CREATE TABLE t_1_0 PARTITION OF t_1 FOR VALUES WITH (MODULUS 4, REMAINDER 0);
CREATE TABLE t_1_1 PARTITION OF t_1 FOR VALUES WITH (MODULUS 4, REMAINDER 1);
CREATE TABLE t_1_2 PARTITION OF t_1 FOR VALUES WITH (MODULUS 4, REMAINDER 2);
CREATE TABLE t_1_3 PARTITION OF t_1 FOR VALUES WITH (MODULUS 4, REMAINDER 3);
CREATE TABLE t_2_0 PARTITION OF t_2 FOR VALUES WITH (MODULUS 4, REMAINDER 0);
CREATE TABLE t_2_1 PARTITION OF t_2 FOR VALUES WITH (MODULUS 4, REMAINDER 1);
CREATE TABLE t_2_2 PARTITION OF t_2 FOR VALUES WITH (MODULUS 4, REMAINDER 2);
CREATE TABLE t_2_3 PARTITION OF t_2 FOR VALUES WITH (MODULUS 4, REMAINDER 3);
CREATE TABLE t_3_0 PARTITION OF t_3 FOR VALUES WITH (MODULUS 4, REMAINDER 0);
CREATE TABLE t_3_1 PARTITION OF t_3 FOR VALUES WITH (MODULUS 4, REMAINDER 1);
CREATE TABLE t_3_2 PARTITION OF t_3 FOR VALUES WITH (MODULUS 4, REMAINDER 2);
CREATE TABLE t_3_3 PARTITION OF t_3 FOR VALUES WITH (MODULUS 4, REMAINDER 3);

EXPLAIN SELECT * FROM t WHERE i1 = 1;
EXPLAIN SELECT * FROM t WHERE i1 = 1 AND i2 = 2;
EXPLAIN SELECT * FROM t WHERE i2 = 2;

-- cleanup

DROP TABLE t;
